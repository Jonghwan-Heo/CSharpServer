// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: network.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace network {

  /// <summary>Holder for reflection information generated from network.proto</summary>
  public static partial class NetworkReflection {

    #region Descriptor
    /// <summary>File descriptor for network.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1uZXR3b3JrLnByb3RvIuMDCgZQYWNrZXQSCgoCaWQYASABKAQSFwoFbG9n",
            "aW4YZCABKAsyBi5Mb2dpbkgAEiQKDGxvZ2luX3Jlc3VsdBhlIAEoCzIMLkxv",
            "Z2luUmVzdWx0SAASFQoEcGluZxhmIAEoCzIFLlBpbmdIABIlCgxkaXNjb25u",
            "ZWN0ZWQYZyABKAsyDS5EaXNjb25uZWN0ZWRIABImCg13ZWxjb21lX2ZpZWxk",
            "GGggASgLMg0uV2VsY29tZUZpZWxkSAASIgoLdW5pdF9qb2luZWQYaSABKAsy",
            "Cy5Vbml0Sm9pbmVkSAASHgoJdW5pdF9sZWZ0GGogASgLMgkuVW5pdExlZnRI",
            "ABIeCgl1bml0X21vdmUYayABKAsyCS5Vbml0TW92ZUgAEiQKDHVuaXRfdXBk",
            "YXRlZBhsIAEoCzIMLlVuaXRVcGRhdGVkSAASJAoMY2hhdF9tZXNzYWdlGG0g",
            "ASgLMgwuQ2hhdE1lc3NhZ2VIABIeCglyb29tX2pvaW4YbiABKAsyCS5Sb29t",
            "Sm9pbkgAEisKEHJvb21fam9pbl9yZXN1bHQYbyABKAsyDy5Sb29tSm9pblJl",
            "c3VsdEgAEiAKCnJvb21fbGVhdmUYcCABKAsyCi5Sb29tTGVhdmVIAEIJCgdN",
            "ZXNzYWdlIuABCgtOZXR3b3JrVW5pdBIKCgJpZBgBIAEoAxIMCgRuYW1lGAIg",
            "ASgJEiIKGmNoYXJhY3Rlcl9pbmZvcm1hdGlvbl9qc29uGAMgASgJEiEKCHBv",
            "c2l0aW9uGAQgASgLMg8uTmV0d29ya1ZlY3RvcjMSIgoJZGlyZWN0aW9uGAUg",
            "ASgLMg8uTmV0d29ya1ZlY3RvcjMSDwoHaGFzaF9pZBgGIAEoCRIVCg1uZnRf",
            "aXRlbV9jaGFyGAcgASgJEhUKDW5mdF9pdGVtX2dlYXIYCCABKAkSDQoFaXNf",
            "Z20YCSABKAgiNwoLTmV0d29ya1Jvb20SCgoCaWQYASABKAMSHAoJcm9vbV9t",
            "b2RlGAIgASgOMgkuUm9vbU1vZGUiGgoMTmV0d29ya0ZpZWxkEgoKAmlkGAEg",
            "ASgDIjEKDk5ldHdvcmtWZWN0b3IzEgkKAXgYASABKAISCQoBeRgCIAEoAhIJ",
            "CgF6GAMgASgCIjsKBUxvZ2luEhEKCWp3dF90b2tlbhgBIAEoCRINCgVlbWFp",
            "bBgCIAEoCRIQCghwYXNzd29yZBgDIAEoCSKxAQoLTG9naW5SZXN1bHQSDgoG",
            "c3RhdHVzGAEgASgFEg4KBmhhc2hJZBgCIAEoCRIXCg9tZXRhX3BpeGVsX25h",
            "bWUYAyABKAkSDAoEbmFtZRgEIAEoCRIaChJuZnRfaXRlbV9saXN0X2pzb24Y",
            "BSABKAkSHAoUcGl4ZWxfYmFsYW5jZV9hbW91bnQYBiABKAMSIQoLbmV0d29y",
            "a1VuaXQYByABKAsyDC5OZXR3b3JrVW5pdCIUCgRQaW5nEgwKBHRpbWUYASAB",
            "KAEiDgoMRGlzY29ubmVjdGVkIlIKDFdlbGNvbWVGaWVsZBIjCg1uZXR3b3Jr",
            "X3VuaXRzGAEgAygLMgwuTmV0d29ya1VuaXQSHQoHbXlfdW5pdBgCIAEoCzIM",
            "Lk5ldHdvcmtVbml0Ii8KClVuaXRKb2luZWQSIQoLbmV0d29ya1VuaXQYAiAB",
            "KAsyDC5OZXR3b3JrVW5pdCIbCghVbml0TGVmdBIPCgd1bml0X2lkGAMgASgD",
            "IrIBCghVbml0TW92ZRIPCgd1bml0X2lkGAEgASgDEgwKBHRpbWUYAiABKAES",
            "IQoIcG9zaXRpb24YAyABKAsyDy5OZXR3b3JrVmVjdG9yMxIiCglkaXJlY3Rp",
            "b24YBCABKAsyDy5OZXR3b3JrVmVjdG9yMxIUCgx2ZWxvY2l0eV94X3oYBSAB",
            "KAISEgoKdmVsb2NpdHlfeRgGIAEoAhIWCg5maXhlZF9wb3NpdGlvbhgHIAEo",
            "CCJJCgtVbml0VXBkYXRlZBIiCgxuZXR3b3JrX3VuaXQYASABKAsyDC5OZXR3",
            "b3JrVW5pdBIWCg5maXhlZF9wb3NpdGlvbhgCIAEoCCJPCgtDaGF0TWVzc2Fn",
            "ZRIPCgd1bml0X2lkGAEgASgDEgwKBG5hbWUYAiABKAkSDwoHY29udGVudBgD",
            "IAEoCRIQCghhbm5vdW5jZRgEIAEoCCIrCghSb29tSm9pbhIPCgdyb29tX2lk",
            "GAEgASgDEg4KBm1hcF9pZBgCIAEoBSJOCg5Sb29tSm9pblJlc3VsdBIgCgtz",
            "dGF0dXNfY29kZRgBIAEoDjILLlN0YXR1c0NvZGUSGgoEcm9vbRgCIAEoCzIM",
            "Lk5ldHdvcmtSb29tIgsKCVJvb21MZWF2ZSpUCgpTdGF0dXNDb2RlEhQKEFNU",
            "QVRVU19DT0RFX05PTkUQABIXChNTVEFUVVNfQ09ERV9TVUNDRVNTEAESFwoS",
            "U1RBVFVTX0NPREVfRkFJTEVEEJBOKmIKCFJvb21Nb2RlEhIKDlJPT01fTU9E",
            "RV9OT05FEAASEwoPUk9PTV9NT0RFX1NRVVJFEAESFgoSUk9PTV9NT0RFX09f",
            "WF9RVUlaEAISFQoQUk9PTV9NT0RFX01VU0VVTRCQTkIKqgIHbmV0d29ya2IG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::network.StatusCode), typeof(global::network.RoomMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::network.Packet), global::network.Packet.Parser, new[]{ "Id", "Login", "LoginResult", "Ping", "Disconnected", "WelcomeField", "UnitJoined", "UnitLeft", "UnitMove", "UnitUpdated", "ChatMessage", "RoomJoin", "RoomJoinResult", "RoomLeave" }, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.NetworkUnit), global::network.NetworkUnit.Parser, new[]{ "Id", "Name", "CharacterInformationJson", "Position", "Direction", "HashId", "NftItemChar", "NftItemGear", "IsGm" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.NetworkRoom), global::network.NetworkRoom.Parser, new[]{ "Id", "RoomMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.NetworkField), global::network.NetworkField.Parser, new[]{ "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.NetworkVector3), global::network.NetworkVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.Login), global::network.Login.Parser, new[]{ "JwtToken", "Email", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.LoginResult), global::network.LoginResult.Parser, new[]{ "Status", "HashId", "MetaPixelName", "Name", "NftItemListJson", "PixelBalanceAmount", "NetworkUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.Ping), global::network.Ping.Parser, new[]{ "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.Disconnected), global::network.Disconnected.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.WelcomeField), global::network.WelcomeField.Parser, new[]{ "NetworkUnits", "MyUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.UnitJoined), global::network.UnitJoined.Parser, new[]{ "NetworkUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.UnitLeft), global::network.UnitLeft.Parser, new[]{ "UnitId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.UnitMove), global::network.UnitMove.Parser, new[]{ "UnitId", "Time", "Position", "Direction", "VelocityXZ", "VelocityY", "FixedPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.UnitUpdated), global::network.UnitUpdated.Parser, new[]{ "NetworkUnit", "FixedPosition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.ChatMessage), global::network.ChatMessage.Parser, new[]{ "UnitId", "Name", "Content", "Announce" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.RoomJoin), global::network.RoomJoin.Parser, new[]{ "RoomId", "MapId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.RoomJoinResult), global::network.RoomJoinResult.Parser, new[]{ "StatusCode", "Room" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::network.RoomLeave), global::network.RoomLeave.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Enums
  /// </summary>
  public enum StatusCode {
    [pbr::OriginalName("STATUS_CODE_NONE")] None = 0,
    [pbr::OriginalName("STATUS_CODE_SUCCESS")] Success = 1,
    [pbr::OriginalName("STATUS_CODE_FAILED")] Failed = 10000,
  }

  public enum RoomMode {
    [pbr::OriginalName("ROOM_MODE_NONE")] None = 0,
    [pbr::OriginalName("ROOM_MODE_SQURE")] Squre = 1,
    [pbr::OriginalName("ROOM_MODE_O_X_QUIZ")] OXQuiz = 2,
    [pbr::OriginalName("ROOM_MODE_MUSEUM")] Museum = 10000,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Packets
  /// </summary>
  public sealed partial class Packet : pb::IMessage<Packet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Packet> _parser = new pb::MessageParser<Packet>(() => new Packet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Packet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet(Packet other) : this() {
      id_ = other.id_;
      switch (other.MessageCase) {
        case MessageOneofCase.Login:
          Login = other.Login.Clone();
          break;
        case MessageOneofCase.LoginResult:
          LoginResult = other.LoginResult.Clone();
          break;
        case MessageOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case MessageOneofCase.Disconnected:
          Disconnected = other.Disconnected.Clone();
          break;
        case MessageOneofCase.WelcomeField:
          WelcomeField = other.WelcomeField.Clone();
          break;
        case MessageOneofCase.UnitJoined:
          UnitJoined = other.UnitJoined.Clone();
          break;
        case MessageOneofCase.UnitLeft:
          UnitLeft = other.UnitLeft.Clone();
          break;
        case MessageOneofCase.UnitMove:
          UnitMove = other.UnitMove.Clone();
          break;
        case MessageOneofCase.UnitUpdated:
          UnitUpdated = other.UnitUpdated.Clone();
          break;
        case MessageOneofCase.ChatMessage:
          ChatMessage = other.ChatMessage.Clone();
          break;
        case MessageOneofCase.RoomJoin:
          RoomJoin = other.RoomJoin.Clone();
          break;
        case MessageOneofCase.RoomJoinResult:
          RoomJoinResult = other.RoomJoinResult.Clone();
          break;
        case MessageOneofCase.RoomLeave:
          RoomLeave = other.RoomLeave.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Packet Clone() {
      return new Packet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 100;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.Login Login {
      get { return messageCase_ == MessageOneofCase.Login ? (global::network.Login) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Login;
      }
    }

    /// <summary>Field number for the "login_result" field.</summary>
    public const int LoginResultFieldNumber = 101;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.LoginResult LoginResult {
      get { return messageCase_ == MessageOneofCase.LoginResult ? (global::network.LoginResult) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.LoginResult;
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 102;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.Ping Ping {
      get { return messageCase_ == MessageOneofCase.Ping ? (global::network.Ping) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "disconnected" field.</summary>
    public const int DisconnectedFieldNumber = 103;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.Disconnected Disconnected {
      get { return messageCase_ == MessageOneofCase.Disconnected ? (global::network.Disconnected) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.Disconnected;
      }
    }

    /// <summary>Field number for the "welcome_field" field.</summary>
    public const int WelcomeFieldFieldNumber = 104;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.WelcomeField WelcomeField {
      get { return messageCase_ == MessageOneofCase.WelcomeField ? (global::network.WelcomeField) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.WelcomeField;
      }
    }

    /// <summary>Field number for the "unit_joined" field.</summary>
    public const int UnitJoinedFieldNumber = 105;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.UnitJoined UnitJoined {
      get { return messageCase_ == MessageOneofCase.UnitJoined ? (global::network.UnitJoined) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnitJoined;
      }
    }

    /// <summary>Field number for the "unit_left" field.</summary>
    public const int UnitLeftFieldNumber = 106;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.UnitLeft UnitLeft {
      get { return messageCase_ == MessageOneofCase.UnitLeft ? (global::network.UnitLeft) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnitLeft;
      }
    }

    /// <summary>Field number for the "unit_move" field.</summary>
    public const int UnitMoveFieldNumber = 107;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.UnitMove UnitMove {
      get { return messageCase_ == MessageOneofCase.UnitMove ? (global::network.UnitMove) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnitMove;
      }
    }

    /// <summary>Field number for the "unit_updated" field.</summary>
    public const int UnitUpdatedFieldNumber = 108;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.UnitUpdated UnitUpdated {
      get { return messageCase_ == MessageOneofCase.UnitUpdated ? (global::network.UnitUpdated) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.UnitUpdated;
      }
    }

    /// <summary>Field number for the "chat_message" field.</summary>
    public const int ChatMessageFieldNumber = 109;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.ChatMessage ChatMessage {
      get { return messageCase_ == MessageOneofCase.ChatMessage ? (global::network.ChatMessage) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.ChatMessage;
      }
    }

    /// <summary>Field number for the "room_join" field.</summary>
    public const int RoomJoinFieldNumber = 110;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.RoomJoin RoomJoin {
      get { return messageCase_ == MessageOneofCase.RoomJoin ? (global::network.RoomJoin) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomJoin;
      }
    }

    /// <summary>Field number for the "room_join_result" field.</summary>
    public const int RoomJoinResultFieldNumber = 111;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.RoomJoinResult RoomJoinResult {
      get { return messageCase_ == MessageOneofCase.RoomJoinResult ? (global::network.RoomJoinResult) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomJoinResult;
      }
    }

    /// <summary>Field number for the "room_leave" field.</summary>
    public const int RoomLeaveFieldNumber = 112;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.RoomLeave RoomLeave {
      get { return messageCase_ == MessageOneofCase.RoomLeave ? (global::network.RoomLeave) message_ : null; }
      set {
        message_ = value;
        messageCase_ = value == null ? MessageOneofCase.None : MessageOneofCase.RoomLeave;
      }
    }

    private object message_;
    /// <summary>Enum of possible cases for the "Message" oneof.</summary>
    public enum MessageOneofCase {
      None = 0,
      Login = 100,
      LoginResult = 101,
      Ping = 102,
      Disconnected = 103,
      WelcomeField = 104,
      UnitJoined = 105,
      UnitLeft = 106,
      UnitMove = 107,
      UnitUpdated = 108,
      ChatMessage = 109,
      RoomJoin = 110,
      RoomJoinResult = 111,
      RoomLeave = 112,
    }
    private MessageOneofCase messageCase_ = MessageOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofCase MessageCase {
      get { return messageCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessage() {
      messageCase_ = MessageOneofCase.None;
      message_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Packet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Packet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Login, other.Login)) return false;
      if (!object.Equals(LoginResult, other.LoginResult)) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(Disconnected, other.Disconnected)) return false;
      if (!object.Equals(WelcomeField, other.WelcomeField)) return false;
      if (!object.Equals(UnitJoined, other.UnitJoined)) return false;
      if (!object.Equals(UnitLeft, other.UnitLeft)) return false;
      if (!object.Equals(UnitMove, other.UnitMove)) return false;
      if (!object.Equals(UnitUpdated, other.UnitUpdated)) return false;
      if (!object.Equals(ChatMessage, other.ChatMessage)) return false;
      if (!object.Equals(RoomJoin, other.RoomJoin)) return false;
      if (!object.Equals(RoomJoinResult, other.RoomJoinResult)) return false;
      if (!object.Equals(RoomLeave, other.RoomLeave)) return false;
      if (MessageCase != other.MessageCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (messageCase_ == MessageOneofCase.Login) hash ^= Login.GetHashCode();
      if (messageCase_ == MessageOneofCase.LoginResult) hash ^= LoginResult.GetHashCode();
      if (messageCase_ == MessageOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (messageCase_ == MessageOneofCase.Disconnected) hash ^= Disconnected.GetHashCode();
      if (messageCase_ == MessageOneofCase.WelcomeField) hash ^= WelcomeField.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnitJoined) hash ^= UnitJoined.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnitLeft) hash ^= UnitLeft.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnitMove) hash ^= UnitMove.GetHashCode();
      if (messageCase_ == MessageOneofCase.UnitUpdated) hash ^= UnitUpdated.GetHashCode();
      if (messageCase_ == MessageOneofCase.ChatMessage) hash ^= ChatMessage.GetHashCode();
      if (messageCase_ == MessageOneofCase.RoomJoin) hash ^= RoomJoin.GetHashCode();
      if (messageCase_ == MessageOneofCase.RoomJoinResult) hash ^= RoomJoinResult.GetHashCode();
      if (messageCase_ == MessageOneofCase.RoomLeave) hash ^= RoomLeave.GetHashCode();
      hash ^= (int) messageCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (messageCase_ == MessageOneofCase.Login) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Login);
      }
      if (messageCase_ == MessageOneofCase.LoginResult) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(LoginResult);
      }
      if (messageCase_ == MessageOneofCase.Ping) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Ping);
      }
      if (messageCase_ == MessageOneofCase.Disconnected) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Disconnected);
      }
      if (messageCase_ == MessageOneofCase.WelcomeField) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(WelcomeField);
      }
      if (messageCase_ == MessageOneofCase.UnitJoined) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(UnitJoined);
      }
      if (messageCase_ == MessageOneofCase.UnitLeft) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(UnitLeft);
      }
      if (messageCase_ == MessageOneofCase.UnitMove) {
        output.WriteRawTag(218, 6);
        output.WriteMessage(UnitMove);
      }
      if (messageCase_ == MessageOneofCase.UnitUpdated) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(UnitUpdated);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.RoomJoin) {
        output.WriteRawTag(242, 6);
        output.WriteMessage(RoomJoin);
      }
      if (messageCase_ == MessageOneofCase.RoomJoinResult) {
        output.WriteRawTag(250, 6);
        output.WriteMessage(RoomJoinResult);
      }
      if (messageCase_ == MessageOneofCase.RoomLeave) {
        output.WriteRawTag(130, 7);
        output.WriteMessage(RoomLeave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (messageCase_ == MessageOneofCase.Login) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(Login);
      }
      if (messageCase_ == MessageOneofCase.LoginResult) {
        output.WriteRawTag(170, 6);
        output.WriteMessage(LoginResult);
      }
      if (messageCase_ == MessageOneofCase.Ping) {
        output.WriteRawTag(178, 6);
        output.WriteMessage(Ping);
      }
      if (messageCase_ == MessageOneofCase.Disconnected) {
        output.WriteRawTag(186, 6);
        output.WriteMessage(Disconnected);
      }
      if (messageCase_ == MessageOneofCase.WelcomeField) {
        output.WriteRawTag(194, 6);
        output.WriteMessage(WelcomeField);
      }
      if (messageCase_ == MessageOneofCase.UnitJoined) {
        output.WriteRawTag(202, 6);
        output.WriteMessage(UnitJoined);
      }
      if (messageCase_ == MessageOneofCase.UnitLeft) {
        output.WriteRawTag(210, 6);
        output.WriteMessage(UnitLeft);
      }
      if (messageCase_ == MessageOneofCase.UnitMove) {
        output.WriteRawTag(218, 6);
        output.WriteMessage(UnitMove);
      }
      if (messageCase_ == MessageOneofCase.UnitUpdated) {
        output.WriteRawTag(226, 6);
        output.WriteMessage(UnitUpdated);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        output.WriteRawTag(234, 6);
        output.WriteMessage(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.RoomJoin) {
        output.WriteRawTag(242, 6);
        output.WriteMessage(RoomJoin);
      }
      if (messageCase_ == MessageOneofCase.RoomJoinResult) {
        output.WriteRawTag(250, 6);
        output.WriteMessage(RoomJoinResult);
      }
      if (messageCase_ == MessageOneofCase.RoomLeave) {
        output.WriteRawTag(130, 7);
        output.WriteMessage(RoomLeave);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (messageCase_ == MessageOneofCase.Login) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Login);
      }
      if (messageCase_ == MessageOneofCase.LoginResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LoginResult);
      }
      if (messageCase_ == MessageOneofCase.Ping) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (messageCase_ == MessageOneofCase.Disconnected) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Disconnected);
      }
      if (messageCase_ == MessageOneofCase.WelcomeField) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WelcomeField);
      }
      if (messageCase_ == MessageOneofCase.UnitJoined) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitJoined);
      }
      if (messageCase_ == MessageOneofCase.UnitLeft) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitLeft);
      }
      if (messageCase_ == MessageOneofCase.UnitMove) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitMove);
      }
      if (messageCase_ == MessageOneofCase.UnitUpdated) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnitUpdated);
      }
      if (messageCase_ == MessageOneofCase.ChatMessage) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ChatMessage);
      }
      if (messageCase_ == MessageOneofCase.RoomJoin) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomJoin);
      }
      if (messageCase_ == MessageOneofCase.RoomJoinResult) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomJoinResult);
      }
      if (messageCase_ == MessageOneofCase.RoomLeave) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RoomLeave);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Packet other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      switch (other.MessageCase) {
        case MessageOneofCase.Login:
          if (Login == null) {
            Login = new global::network.Login();
          }
          Login.MergeFrom(other.Login);
          break;
        case MessageOneofCase.LoginResult:
          if (LoginResult == null) {
            LoginResult = new global::network.LoginResult();
          }
          LoginResult.MergeFrom(other.LoginResult);
          break;
        case MessageOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::network.Ping();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case MessageOneofCase.Disconnected:
          if (Disconnected == null) {
            Disconnected = new global::network.Disconnected();
          }
          Disconnected.MergeFrom(other.Disconnected);
          break;
        case MessageOneofCase.WelcomeField:
          if (WelcomeField == null) {
            WelcomeField = new global::network.WelcomeField();
          }
          WelcomeField.MergeFrom(other.WelcomeField);
          break;
        case MessageOneofCase.UnitJoined:
          if (UnitJoined == null) {
            UnitJoined = new global::network.UnitJoined();
          }
          UnitJoined.MergeFrom(other.UnitJoined);
          break;
        case MessageOneofCase.UnitLeft:
          if (UnitLeft == null) {
            UnitLeft = new global::network.UnitLeft();
          }
          UnitLeft.MergeFrom(other.UnitLeft);
          break;
        case MessageOneofCase.UnitMove:
          if (UnitMove == null) {
            UnitMove = new global::network.UnitMove();
          }
          UnitMove.MergeFrom(other.UnitMove);
          break;
        case MessageOneofCase.UnitUpdated:
          if (UnitUpdated == null) {
            UnitUpdated = new global::network.UnitUpdated();
          }
          UnitUpdated.MergeFrom(other.UnitUpdated);
          break;
        case MessageOneofCase.ChatMessage:
          if (ChatMessage == null) {
            ChatMessage = new global::network.ChatMessage();
          }
          ChatMessage.MergeFrom(other.ChatMessage);
          break;
        case MessageOneofCase.RoomJoin:
          if (RoomJoin == null) {
            RoomJoin = new global::network.RoomJoin();
          }
          RoomJoin.MergeFrom(other.RoomJoin);
          break;
        case MessageOneofCase.RoomJoinResult:
          if (RoomJoinResult == null) {
            RoomJoinResult = new global::network.RoomJoinResult();
          }
          RoomJoinResult.MergeFrom(other.RoomJoinResult);
          break;
        case MessageOneofCase.RoomLeave:
          if (RoomLeave == null) {
            RoomLeave = new global::network.RoomLeave();
          }
          RoomLeave.MergeFrom(other.RoomLeave);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 802: {
            global::network.Login subBuilder = new global::network.Login();
            if (messageCase_ == MessageOneofCase.Login) {
              subBuilder.MergeFrom(Login);
            }
            input.ReadMessage(subBuilder);
            Login = subBuilder;
            break;
          }
          case 810: {
            global::network.LoginResult subBuilder = new global::network.LoginResult();
            if (messageCase_ == MessageOneofCase.LoginResult) {
              subBuilder.MergeFrom(LoginResult);
            }
            input.ReadMessage(subBuilder);
            LoginResult = subBuilder;
            break;
          }
          case 818: {
            global::network.Ping subBuilder = new global::network.Ping();
            if (messageCase_ == MessageOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 826: {
            global::network.Disconnected subBuilder = new global::network.Disconnected();
            if (messageCase_ == MessageOneofCase.Disconnected) {
              subBuilder.MergeFrom(Disconnected);
            }
            input.ReadMessage(subBuilder);
            Disconnected = subBuilder;
            break;
          }
          case 834: {
            global::network.WelcomeField subBuilder = new global::network.WelcomeField();
            if (messageCase_ == MessageOneofCase.WelcomeField) {
              subBuilder.MergeFrom(WelcomeField);
            }
            input.ReadMessage(subBuilder);
            WelcomeField = subBuilder;
            break;
          }
          case 842: {
            global::network.UnitJoined subBuilder = new global::network.UnitJoined();
            if (messageCase_ == MessageOneofCase.UnitJoined) {
              subBuilder.MergeFrom(UnitJoined);
            }
            input.ReadMessage(subBuilder);
            UnitJoined = subBuilder;
            break;
          }
          case 850: {
            global::network.UnitLeft subBuilder = new global::network.UnitLeft();
            if (messageCase_ == MessageOneofCase.UnitLeft) {
              subBuilder.MergeFrom(UnitLeft);
            }
            input.ReadMessage(subBuilder);
            UnitLeft = subBuilder;
            break;
          }
          case 858: {
            global::network.UnitMove subBuilder = new global::network.UnitMove();
            if (messageCase_ == MessageOneofCase.UnitMove) {
              subBuilder.MergeFrom(UnitMove);
            }
            input.ReadMessage(subBuilder);
            UnitMove = subBuilder;
            break;
          }
          case 866: {
            global::network.UnitUpdated subBuilder = new global::network.UnitUpdated();
            if (messageCase_ == MessageOneofCase.UnitUpdated) {
              subBuilder.MergeFrom(UnitUpdated);
            }
            input.ReadMessage(subBuilder);
            UnitUpdated = subBuilder;
            break;
          }
          case 874: {
            global::network.ChatMessage subBuilder = new global::network.ChatMessage();
            if (messageCase_ == MessageOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 882: {
            global::network.RoomJoin subBuilder = new global::network.RoomJoin();
            if (messageCase_ == MessageOneofCase.RoomJoin) {
              subBuilder.MergeFrom(RoomJoin);
            }
            input.ReadMessage(subBuilder);
            RoomJoin = subBuilder;
            break;
          }
          case 890: {
            global::network.RoomJoinResult subBuilder = new global::network.RoomJoinResult();
            if (messageCase_ == MessageOneofCase.RoomJoinResult) {
              subBuilder.MergeFrom(RoomJoinResult);
            }
            input.ReadMessage(subBuilder);
            RoomJoinResult = subBuilder;
            break;
          }
          case 898: {
            global::network.RoomLeave subBuilder = new global::network.RoomLeave();
            if (messageCase_ == MessageOneofCase.RoomLeave) {
              subBuilder.MergeFrom(RoomLeave);
            }
            input.ReadMessage(subBuilder);
            RoomLeave = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 802: {
            global::network.Login subBuilder = new global::network.Login();
            if (messageCase_ == MessageOneofCase.Login) {
              subBuilder.MergeFrom(Login);
            }
            input.ReadMessage(subBuilder);
            Login = subBuilder;
            break;
          }
          case 810: {
            global::network.LoginResult subBuilder = new global::network.LoginResult();
            if (messageCase_ == MessageOneofCase.LoginResult) {
              subBuilder.MergeFrom(LoginResult);
            }
            input.ReadMessage(subBuilder);
            LoginResult = subBuilder;
            break;
          }
          case 818: {
            global::network.Ping subBuilder = new global::network.Ping();
            if (messageCase_ == MessageOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 826: {
            global::network.Disconnected subBuilder = new global::network.Disconnected();
            if (messageCase_ == MessageOneofCase.Disconnected) {
              subBuilder.MergeFrom(Disconnected);
            }
            input.ReadMessage(subBuilder);
            Disconnected = subBuilder;
            break;
          }
          case 834: {
            global::network.WelcomeField subBuilder = new global::network.WelcomeField();
            if (messageCase_ == MessageOneofCase.WelcomeField) {
              subBuilder.MergeFrom(WelcomeField);
            }
            input.ReadMessage(subBuilder);
            WelcomeField = subBuilder;
            break;
          }
          case 842: {
            global::network.UnitJoined subBuilder = new global::network.UnitJoined();
            if (messageCase_ == MessageOneofCase.UnitJoined) {
              subBuilder.MergeFrom(UnitJoined);
            }
            input.ReadMessage(subBuilder);
            UnitJoined = subBuilder;
            break;
          }
          case 850: {
            global::network.UnitLeft subBuilder = new global::network.UnitLeft();
            if (messageCase_ == MessageOneofCase.UnitLeft) {
              subBuilder.MergeFrom(UnitLeft);
            }
            input.ReadMessage(subBuilder);
            UnitLeft = subBuilder;
            break;
          }
          case 858: {
            global::network.UnitMove subBuilder = new global::network.UnitMove();
            if (messageCase_ == MessageOneofCase.UnitMove) {
              subBuilder.MergeFrom(UnitMove);
            }
            input.ReadMessage(subBuilder);
            UnitMove = subBuilder;
            break;
          }
          case 866: {
            global::network.UnitUpdated subBuilder = new global::network.UnitUpdated();
            if (messageCase_ == MessageOneofCase.UnitUpdated) {
              subBuilder.MergeFrom(UnitUpdated);
            }
            input.ReadMessage(subBuilder);
            UnitUpdated = subBuilder;
            break;
          }
          case 874: {
            global::network.ChatMessage subBuilder = new global::network.ChatMessage();
            if (messageCase_ == MessageOneofCase.ChatMessage) {
              subBuilder.MergeFrom(ChatMessage);
            }
            input.ReadMessage(subBuilder);
            ChatMessage = subBuilder;
            break;
          }
          case 882: {
            global::network.RoomJoin subBuilder = new global::network.RoomJoin();
            if (messageCase_ == MessageOneofCase.RoomJoin) {
              subBuilder.MergeFrom(RoomJoin);
            }
            input.ReadMessage(subBuilder);
            RoomJoin = subBuilder;
            break;
          }
          case 890: {
            global::network.RoomJoinResult subBuilder = new global::network.RoomJoinResult();
            if (messageCase_ == MessageOneofCase.RoomJoinResult) {
              subBuilder.MergeFrom(RoomJoinResult);
            }
            input.ReadMessage(subBuilder);
            RoomJoinResult = subBuilder;
            break;
          }
          case 898: {
            global::network.RoomLeave subBuilder = new global::network.RoomLeave();
            if (messageCase_ == MessageOneofCase.RoomLeave) {
              subBuilder.MergeFrom(RoomLeave);
            }
            input.ReadMessage(subBuilder);
            RoomLeave = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Data
  /// </summary>
  public sealed partial class NetworkUnit : pb::IMessage<NetworkUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkUnit> _parser = new pb::MessageParser<NetworkUnit>(() => new NetworkUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkUnit(NetworkUnit other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      characterInformationJson_ = other.characterInformationJson_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      hashId_ = other.hashId_;
      nftItemChar_ = other.nftItemChar_;
      nftItemGear_ = other.nftItemGear_;
      isGm_ = other.isGm_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkUnit Clone() {
      return new NetworkUnit(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "character_information_json" field.</summary>
    public const int CharacterInformationJsonFieldNumber = 3;
    private string characterInformationJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CharacterInformationJson {
      get { return characterInformationJson_; }
      set {
        characterInformationJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 4;
    private global::network.NetworkVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 5;
    private global::network.NetworkVector3 direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkVector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "hash_id" field.</summary>
    public const int HashIdFieldNumber = 6;
    private string hashId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashId {
      get { return hashId_; }
      set {
        hashId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nft_item_char" field.</summary>
    public const int NftItemCharFieldNumber = 7;
    private string nftItemChar_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NftItemChar {
      get { return nftItemChar_; }
      set {
        nftItemChar_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nft_item_gear" field.</summary>
    public const int NftItemGearFieldNumber = 8;
    private string nftItemGear_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NftItemGear {
      get { return nftItemGear_; }
      set {
        nftItemGear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_gm" field.</summary>
    public const int IsGmFieldNumber = 9;
    private bool isGm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGm {
      get { return isGm_; }
      set {
        isGm_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (CharacterInformationJson != other.CharacterInformationJson) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (HashId != other.HashId) return false;
      if (NftItemChar != other.NftItemChar) return false;
      if (NftItemGear != other.NftItemGear) return false;
      if (IsGm != other.IsGm) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (CharacterInformationJson.Length != 0) hash ^= CharacterInformationJson.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (HashId.Length != 0) hash ^= HashId.GetHashCode();
      if (NftItemChar.Length != 0) hash ^= NftItemChar.GetHashCode();
      if (NftItemGear.Length != 0) hash ^= NftItemGear.GetHashCode();
      if (IsGm != false) hash ^= IsGm.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (CharacterInformationJson.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CharacterInformationJson);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (direction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Direction);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HashId);
      }
      if (NftItemChar.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NftItemChar);
      }
      if (NftItemGear.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NftItemGear);
      }
      if (IsGm != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsGm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (CharacterInformationJson.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CharacterInformationJson);
      }
      if (position_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Position);
      }
      if (direction_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Direction);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(HashId);
      }
      if (NftItemChar.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(NftItemChar);
      }
      if (NftItemGear.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(NftItemGear);
      }
      if (IsGm != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsGm);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (CharacterInformationJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterInformationJson);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (HashId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashId);
      }
      if (NftItemChar.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NftItemChar);
      }
      if (NftItemGear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NftItemGear);
      }
      if (IsGm != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkUnit other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.CharacterInformationJson.Length != 0) {
        CharacterInformationJson = other.CharacterInformationJson;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::network.NetworkVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::network.NetworkVector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      if (other.HashId.Length != 0) {
        HashId = other.HashId;
      }
      if (other.NftItemChar.Length != 0) {
        NftItemChar = other.NftItemChar;
      }
      if (other.NftItemGear.Length != 0) {
        NftItemGear = other.NftItemGear;
      }
      if (other.IsGm != false) {
        IsGm = other.IsGm;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            CharacterInformationJson = input.ReadString();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::network.NetworkVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 42: {
            if (direction_ == null) {
              Direction = new global::network.NetworkVector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 50: {
            HashId = input.ReadString();
            break;
          }
          case 58: {
            NftItemChar = input.ReadString();
            break;
          }
          case 66: {
            NftItemGear = input.ReadString();
            break;
          }
          case 72: {
            IsGm = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            CharacterInformationJson = input.ReadString();
            break;
          }
          case 34: {
            if (position_ == null) {
              Position = new global::network.NetworkVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 42: {
            if (direction_ == null) {
              Direction = new global::network.NetworkVector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 50: {
            HashId = input.ReadString();
            break;
          }
          case 58: {
            NftItemChar = input.ReadString();
            break;
          }
          case 66: {
            NftItemGear = input.ReadString();
            break;
          }
          case 72: {
            IsGm = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NetworkRoom : pb::IMessage<NetworkRoom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkRoom> _parser = new pb::MessageParser<NetworkRoom>(() => new NetworkRoom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkRoom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRoom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRoom(NetworkRoom other) : this() {
      id_ = other.id_;
      roomMode_ = other.roomMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkRoom Clone() {
      return new NetworkRoom(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "room_mode" field.</summary>
    public const int RoomModeFieldNumber = 2;
    private global::network.RoomMode roomMode_ = global::network.RoomMode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.RoomMode RoomMode {
      get { return roomMode_; }
      set {
        roomMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkRoom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkRoom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RoomMode != other.RoomMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (RoomMode != global::network.RoomMode.None) hash ^= RoomMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (RoomMode != global::network.RoomMode.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (RoomMode != global::network.RoomMode.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) RoomMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (RoomMode != global::network.RoomMode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RoomMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkRoom other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.RoomMode != global::network.RoomMode.None) {
        RoomMode = other.RoomMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            RoomMode = (global::network.RoomMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 16: {
            RoomMode = (global::network.RoomMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NetworkField : pb::IMessage<NetworkField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkField> _parser = new pb::MessageParser<NetworkField>(() => new NetworkField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkField(NetworkField other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkField Clone() {
      return new NetworkField(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkField other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class NetworkVector3 : pb::IMessage<NetworkVector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NetworkVector3> _parser = new pb::MessageParser<NetworkVector3>(() => new NetworkVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkVector3(NetworkVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkVector3 Clone() {
      return new NetworkVector3(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Messages
  /// </summary>
  public sealed partial class Login : pb::IMessage<Login>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Login> _parser = new pb::MessageParser<Login>(() => new Login());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Login> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login(Login other) : this() {
      jwtToken_ = other.jwtToken_;
      email_ = other.email_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Login Clone() {
      return new Login(this);
    }

    /// <summary>Field number for the "jwt_token" field.</summary>
    public const int JwtTokenFieldNumber = 1;
    private string jwtToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JwtToken {
      get { return jwtToken_; }
      set {
        jwtToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Login);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Login other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JwtToken != other.JwtToken) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JwtToken.Length != 0) hash ^= JwtToken.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JwtToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JwtToken);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JwtToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JwtToken);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JwtToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JwtToken);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Login other) {
      if (other == null) {
        return;
      }
      if (other.JwtToken.Length != 0) {
        JwtToken = other.JwtToken;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JwtToken = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            JwtToken = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LoginResult : pb::IMessage<LoginResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoginResult> _parser = new pb::MessageParser<LoginResult>(() => new LoginResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult(LoginResult other) : this() {
      status_ = other.status_;
      hashId_ = other.hashId_;
      metaPixelName_ = other.metaPixelName_;
      name_ = other.name_;
      nftItemListJson_ = other.nftItemListJson_;
      pixelBalanceAmount_ = other.pixelBalanceAmount_;
      networkUnit_ = other.networkUnit_ != null ? other.networkUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResult Clone() {
      return new LoginResult(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private int status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "hashId" field.</summary>
    public const int HashIdFieldNumber = 2;
    private string hashId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HashId {
      get { return hashId_; }
      set {
        hashId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "meta_pixel_name" field.</summary>
    public const int MetaPixelNameFieldNumber = 3;
    private string metaPixelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MetaPixelName {
      get { return metaPixelName_; }
      set {
        metaPixelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nft_item_list_json" field.</summary>
    public const int NftItemListJsonFieldNumber = 5;
    private string nftItemListJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NftItemListJson {
      get { return nftItemListJson_; }
      set {
        nftItemListJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pixel_balance_amount" field.</summary>
    public const int PixelBalanceAmountFieldNumber = 6;
    private long pixelBalanceAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PixelBalanceAmount {
      get { return pixelBalanceAmount_; }
      set {
        pixelBalanceAmount_ = value;
      }
    }

    /// <summary>Field number for the "networkUnit" field.</summary>
    public const int NetworkUnitFieldNumber = 7;
    private global::network.NetworkUnit networkUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkUnit NetworkUnit {
      get { return networkUnit_; }
      set {
        networkUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      if (HashId != other.HashId) return false;
      if (MetaPixelName != other.MetaPixelName) return false;
      if (Name != other.Name) return false;
      if (NftItemListJson != other.NftItemListJson) return false;
      if (PixelBalanceAmount != other.PixelBalanceAmount) return false;
      if (!object.Equals(NetworkUnit, other.NetworkUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      if (HashId.Length != 0) hash ^= HashId.GetHashCode();
      if (MetaPixelName.Length != 0) hash ^= MetaPixelName.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (NftItemListJson.Length != 0) hash ^= NftItemListJson.GetHashCode();
      if (PixelBalanceAmount != 0L) hash ^= PixelBalanceAmount.GetHashCode();
      if (networkUnit_ != null) hash ^= NetworkUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashId);
      }
      if (MetaPixelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaPixelName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (NftItemListJson.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NftItemListJson);
      }
      if (PixelBalanceAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PixelBalanceAmount);
      }
      if (networkUnit_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NetworkUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Status);
      }
      if (HashId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HashId);
      }
      if (MetaPixelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MetaPixelName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (NftItemListJson.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(NftItemListJson);
      }
      if (PixelBalanceAmount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PixelBalanceAmount);
      }
      if (networkUnit_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(NetworkUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
      }
      if (HashId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HashId);
      }
      if (MetaPixelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MetaPixelName);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (NftItemListJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NftItemListJson);
      }
      if (PixelBalanceAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PixelBalanceAmount);
      }
      if (networkUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResult other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.HashId.Length != 0) {
        HashId = other.HashId;
      }
      if (other.MetaPixelName.Length != 0) {
        MetaPixelName = other.MetaPixelName;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.NftItemListJson.Length != 0) {
        NftItemListJson = other.NftItemListJson;
      }
      if (other.PixelBalanceAmount != 0L) {
        PixelBalanceAmount = other.PixelBalanceAmount;
      }
      if (other.networkUnit_ != null) {
        if (networkUnit_ == null) {
          NetworkUnit = new global::network.NetworkUnit();
        }
        NetworkUnit.MergeFrom(other.NetworkUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            HashId = input.ReadString();
            break;
          }
          case 26: {
            MetaPixelName = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            NftItemListJson = input.ReadString();
            break;
          }
          case 48: {
            PixelBalanceAmount = input.ReadInt64();
            break;
          }
          case 58: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Status = input.ReadInt32();
            break;
          }
          case 18: {
            HashId = input.ReadString();
            break;
          }
          case 26: {
            MetaPixelName = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            NftItemListJson = input.ReadString();
            break;
          }
          case 48: {
            PixelBalanceAmount = input.ReadInt64();
            break;
          }
          case 58: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Ping : pb::IMessage<Ping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Ping> _parser = new pb::MessageParser<Ping>(() => new Ping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Ping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping(Ping other) : this() {
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Ping Clone() {
      return new Ping(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private double time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Ping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Ping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Time != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Time != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Ping other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Time = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Time = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Disconnected : pb::IMessage<Disconnected>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Disconnected> _parser = new pb::MessageParser<Disconnected>(() => new Disconnected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Disconnected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnected(Disconnected other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Disconnected Clone() {
      return new Disconnected(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Disconnected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Disconnected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Disconnected other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class WelcomeField : pb::IMessage<WelcomeField>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WelcomeField> _parser = new pb::MessageParser<WelcomeField>(() => new WelcomeField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WelcomeField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeField(WelcomeField other) : this() {
      networkUnits_ = other.networkUnits_.Clone();
      myUnit_ = other.myUnit_ != null ? other.myUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WelcomeField Clone() {
      return new WelcomeField(this);
    }

    /// <summary>Field number for the "network_units" field.</summary>
    public const int NetworkUnitsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::network.NetworkUnit> _repeated_networkUnits_codec
        = pb::FieldCodec.ForMessage(10, global::network.NetworkUnit.Parser);
    private readonly pbc::RepeatedField<global::network.NetworkUnit> networkUnits_ = new pbc::RepeatedField<global::network.NetworkUnit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::network.NetworkUnit> NetworkUnits {
      get { return networkUnits_; }
    }

    /// <summary>Field number for the "my_unit" field.</summary>
    public const int MyUnitFieldNumber = 2;
    private global::network.NetworkUnit myUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkUnit MyUnit {
      get { return myUnit_; }
      set {
        myUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WelcomeField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WelcomeField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!networkUnits_.Equals(other.networkUnits_)) return false;
      if (!object.Equals(MyUnit, other.MyUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= networkUnits_.GetHashCode();
      if (myUnit_ != null) hash ^= MyUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      networkUnits_.WriteTo(output, _repeated_networkUnits_codec);
      if (myUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MyUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      networkUnits_.WriteTo(ref output, _repeated_networkUnits_codec);
      if (myUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MyUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += networkUnits_.CalculateSize(_repeated_networkUnits_codec);
      if (myUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MyUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WelcomeField other) {
      if (other == null) {
        return;
      }
      networkUnits_.Add(other.networkUnits_);
      if (other.myUnit_ != null) {
        if (myUnit_ == null) {
          MyUnit = new global::network.NetworkUnit();
        }
        MyUnit.MergeFrom(other.MyUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            networkUnits_.AddEntriesFrom(input, _repeated_networkUnits_codec);
            break;
          }
          case 18: {
            if (myUnit_ == null) {
              MyUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(MyUnit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            networkUnits_.AddEntriesFrom(ref input, _repeated_networkUnits_codec);
            break;
          }
          case 18: {
            if (myUnit_ == null) {
              MyUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(MyUnit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitJoined : pb::IMessage<UnitJoined>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitJoined> _parser = new pb::MessageParser<UnitJoined>(() => new UnitJoined());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitJoined> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitJoined() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitJoined(UnitJoined other) : this() {
      networkUnit_ = other.networkUnit_ != null ? other.networkUnit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitJoined Clone() {
      return new UnitJoined(this);
    }

    /// <summary>Field number for the "networkUnit" field.</summary>
    public const int NetworkUnitFieldNumber = 2;
    private global::network.NetworkUnit networkUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkUnit NetworkUnit {
      get { return networkUnit_; }
      set {
        networkUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitJoined);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitJoined other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NetworkUnit, other.NetworkUnit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (networkUnit_ != null) hash ^= NetworkUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (networkUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NetworkUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (networkUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(NetworkUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (networkUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitJoined other) {
      if (other == null) {
        return;
      }
      if (other.networkUnit_ != null) {
        if (networkUnit_ == null) {
          NetworkUnit = new global::network.NetworkUnit();
        }
        NetworkUnit.MergeFrom(other.NetworkUnit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitLeft : pb::IMessage<UnitLeft>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitLeft> _parser = new pb::MessageParser<UnitLeft>(() => new UnitLeft());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitLeft> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitLeft() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitLeft(UnitLeft other) : this() {
      unitId_ = other.unitId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitLeft Clone() {
      return new UnitLeft(this);
    }

    /// <summary>Field number for the "unit_id" field.</summary>
    public const int UnitIdFieldNumber = 3;
    private long unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitLeft);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitLeft other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0L) hash ^= UnitId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnitId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UnitId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnitId != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(UnitId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnitId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitLeft other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0L) {
        UnitId = other.UnitId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            UnitId = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            UnitId = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitMove : pb::IMessage<UnitMove>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitMove> _parser = new pb::MessageParser<UnitMove>(() => new UnitMove());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitMove> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitMove() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitMove(UnitMove other) : this() {
      unitId_ = other.unitId_;
      time_ = other.time_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      velocityXZ_ = other.velocityXZ_;
      velocityY_ = other.velocityY_;
      fixedPosition_ = other.fixedPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitMove Clone() {
      return new UnitMove(this);
    }

    /// <summary>Field number for the "unit_id" field.</summary>
    public const int UnitIdFieldNumber = 1;
    private long unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private double time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::network.NetworkVector3 position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkVector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 4;
    private global::network.NetworkVector3 direction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkVector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "velocity_x_z" field.</summary>
    public const int VelocityXZFieldNumber = 5;
    private float velocityXZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float VelocityXZ {
      get { return velocityXZ_; }
      set {
        velocityXZ_ = value;
      }
    }

    /// <summary>Field number for the "velocity_y" field.</summary>
    public const int VelocityYFieldNumber = 6;
    private float velocityY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float VelocityY {
      get { return velocityY_; }
      set {
        velocityY_ = value;
      }
    }

    /// <summary>Field number for the "fixed_position" field.</summary>
    public const int FixedPositionFieldNumber = 7;
    private bool fixedPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FixedPosition {
      get { return fixedPosition_; }
      set {
        fixedPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitMove);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitMove other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityXZ, other.VelocityXZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VelocityY, other.VelocityY)) return false;
      if (FixedPosition != other.FixedPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0L) hash ^= UnitId.GetHashCode();
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (position_ != null) hash ^= Position.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (VelocityXZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityXZ);
      if (VelocityY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VelocityY);
      if (FixedPosition != false) hash ^= FixedPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnitId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnitId);
      }
      if (Time != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Time);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (VelocityXZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(VelocityXZ);
      }
      if (VelocityY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(VelocityY);
      }
      if (FixedPosition != false) {
        output.WriteRawTag(56);
        output.WriteBool(FixedPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnitId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnitId);
      }
      if (Time != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Time);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      if (direction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Direction);
      }
      if (VelocityXZ != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(VelocityXZ);
      }
      if (VelocityY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(VelocityY);
      }
      if (FixedPosition != false) {
        output.WriteRawTag(56);
        output.WriteBool(FixedPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnitId);
      }
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (VelocityXZ != 0F) {
        size += 1 + 4;
      }
      if (VelocityY != 0F) {
        size += 1 + 4;
      }
      if (FixedPosition != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitMove other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0L) {
        UnitId = other.UnitId;
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::network.NetworkVector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::network.NetworkVector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      if (other.VelocityXZ != 0F) {
        VelocityXZ = other.VelocityXZ;
      }
      if (other.VelocityY != 0F) {
        VelocityY = other.VelocityY;
      }
      if (other.FixedPosition != false) {
        FixedPosition = other.FixedPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitId = input.ReadInt64();
            break;
          }
          case 17: {
            Time = input.ReadDouble();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::network.NetworkVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::network.NetworkVector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 45: {
            VelocityXZ = input.ReadFloat();
            break;
          }
          case 53: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 56: {
            FixedPosition = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UnitId = input.ReadInt64();
            break;
          }
          case 17: {
            Time = input.ReadDouble();
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::network.NetworkVector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            if (direction_ == null) {
              Direction = new global::network.NetworkVector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 45: {
            VelocityXZ = input.ReadFloat();
            break;
          }
          case 53: {
            VelocityY = input.ReadFloat();
            break;
          }
          case 56: {
            FixedPosition = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitUpdated : pb::IMessage<UnitUpdated>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitUpdated> _parser = new pb::MessageParser<UnitUpdated>(() => new UnitUpdated());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnitUpdated> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitUpdated() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitUpdated(UnitUpdated other) : this() {
      networkUnit_ = other.networkUnit_ != null ? other.networkUnit_.Clone() : null;
      fixedPosition_ = other.fixedPosition_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnitUpdated Clone() {
      return new UnitUpdated(this);
    }

    /// <summary>Field number for the "network_unit" field.</summary>
    public const int NetworkUnitFieldNumber = 1;
    private global::network.NetworkUnit networkUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkUnit NetworkUnit {
      get { return networkUnit_; }
      set {
        networkUnit_ = value;
      }
    }

    /// <summary>Field number for the "fixed_position" field.</summary>
    public const int FixedPositionFieldNumber = 2;
    private bool fixedPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FixedPosition {
      get { return fixedPosition_; }
      set {
        fixedPosition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnitUpdated);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnitUpdated other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(NetworkUnit, other.NetworkUnit)) return false;
      if (FixedPosition != other.FixedPosition) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (networkUnit_ != null) hash ^= NetworkUnit.GetHashCode();
      if (FixedPosition != false) hash ^= FixedPosition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (networkUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NetworkUnit);
      }
      if (FixedPosition != false) {
        output.WriteRawTag(16);
        output.WriteBool(FixedPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (networkUnit_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(NetworkUnit);
      }
      if (FixedPosition != false) {
        output.WriteRawTag(16);
        output.WriteBool(FixedPosition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (networkUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NetworkUnit);
      }
      if (FixedPosition != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnitUpdated other) {
      if (other == null) {
        return;
      }
      if (other.networkUnit_ != null) {
        if (networkUnit_ == null) {
          NetworkUnit = new global::network.NetworkUnit();
        }
        NetworkUnit.MergeFrom(other.NetworkUnit);
      }
      if (other.FixedPosition != false) {
        FixedPosition = other.FixedPosition;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
          case 16: {
            FixedPosition = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (networkUnit_ == null) {
              NetworkUnit = new global::network.NetworkUnit();
            }
            input.ReadMessage(NetworkUnit);
            break;
          }
          case 16: {
            FixedPosition = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      unitId_ = other.unitId_;
      name_ = other.name_;
      content_ = other.content_;
      announce_ = other.announce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "unit_id" field.</summary>
    public const int UnitIdFieldNumber = 1;
    private long unitId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnitId {
      get { return unitId_; }
      set {
        unitId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 3;
    private string content_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Content {
      get { return content_; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "announce" field.</summary>
    public const int AnnounceFieldNumber = 4;
    private bool announce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Announce {
      get { return announce_; }
      set {
        announce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnitId != other.UnitId) return false;
      if (Name != other.Name) return false;
      if (Content != other.Content) return false;
      if (Announce != other.Announce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnitId != 0L) hash ^= UnitId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Content.Length != 0) hash ^= Content.GetHashCode();
      if (Announce != false) hash ^= Announce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UnitId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnitId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (Announce != false) {
        output.WriteRawTag(32);
        output.WriteBool(Announce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UnitId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UnitId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Content.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Content);
      }
      if (Announce != false) {
        output.WriteRawTag(32);
        output.WriteBool(Announce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnitId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnitId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Content.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Content);
      }
      if (Announce != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.UnitId != 0L) {
        UnitId = other.UnitId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Content.Length != 0) {
        Content = other.Content;
      }
      if (other.Announce != false) {
        Announce = other.Announce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnitId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 32: {
            Announce = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UnitId = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Content = input.ReadString();
            break;
          }
          case 32: {
            Announce = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomJoin : pb::IMessage<RoomJoin>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomJoin> _parser = new pb::MessageParser<RoomJoin>(() => new RoomJoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoin(RoomJoin other) : this() {
      roomId_ = other.roomId_;
      mapId_ = other.mapId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoin Clone() {
      return new RoomJoin(this);
    }

    /// <summary>Field number for the "room_id" field.</summary>
    public const int RoomIdFieldNumber = 1;
    private long roomId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RoomId {
      get { return roomId_; }
      set {
        roomId_ = value;
      }
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 2;
    private int mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoomId != other.RoomId) return false;
      if (MapId != other.MapId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoomId != 0L) hash ^= RoomId.GetHashCode();
      if (MapId != 0) hash ^= MapId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoomId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RoomId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(RoomId);
      }
      if (MapId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MapId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoomId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RoomId);
      }
      if (MapId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MapId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomJoin other) {
      if (other == null) {
        return;
      }
      if (other.RoomId != 0L) {
        RoomId = other.RoomId;
      }
      if (other.MapId != 0) {
        MapId = other.MapId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RoomId = input.ReadInt64();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            RoomId = input.ReadInt64();
            break;
          }
          case 16: {
            MapId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomJoinResult : pb::IMessage<RoomJoinResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomJoinResult> _parser = new pb::MessageParser<RoomJoinResult>(() => new RoomJoinResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomJoinResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoinResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoinResult(RoomJoinResult other) : this() {
      statusCode_ = other.statusCode_;
      room_ = other.room_ != null ? other.room_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomJoinResult Clone() {
      return new RoomJoinResult(this);
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 1;
    private global::network.StatusCode statusCode_ = global::network.StatusCode.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.StatusCode StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "room" field.</summary>
    public const int RoomFieldNumber = 2;
    private global::network.NetworkRoom room_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::network.NetworkRoom Room {
      get { return room_; }
      set {
        room_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomJoinResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomJoinResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCode != other.StatusCode) return false;
      if (!object.Equals(Room, other.Room)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCode != global::network.StatusCode.None) hash ^= StatusCode.GetHashCode();
      if (room_ != null) hash ^= Room.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StatusCode != global::network.StatusCode.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StatusCode);
      }
      if (room_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StatusCode != global::network.StatusCode.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) StatusCode);
      }
      if (room_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Room);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCode != global::network.StatusCode.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StatusCode);
      }
      if (room_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Room);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomJoinResult other) {
      if (other == null) {
        return;
      }
      if (other.StatusCode != global::network.StatusCode.None) {
        StatusCode = other.StatusCode;
      }
      if (other.room_ != null) {
        if (room_ == null) {
          Room = new global::network.NetworkRoom();
        }
        Room.MergeFrom(other.Room);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            StatusCode = (global::network.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (room_ == null) {
              Room = new global::network.NetworkRoom();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            StatusCode = (global::network.StatusCode) input.ReadEnum();
            break;
          }
          case 18: {
            if (room_ == null) {
              Room = new global::network.NetworkRoom();
            }
            input.ReadMessage(Room);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RoomLeave : pb::IMessage<RoomLeave>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RoomLeave> _parser = new pb::MessageParser<RoomLeave>(() => new RoomLeave());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RoomLeave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::network.NetworkReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLeave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLeave(RoomLeave other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RoomLeave Clone() {
      return new RoomLeave(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RoomLeave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RoomLeave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RoomLeave other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
